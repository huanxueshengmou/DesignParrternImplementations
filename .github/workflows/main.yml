name: Vue.js CI/CD Workflow

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  pull_request:
    branches:
      - main  # 当有 Pull Request 到 main 分支时触发

jobs:
  build:
    runs-on: ubuntu-latest  # 使用最新的 Ubuntu 环境

    steps:
    # 1. 检出代码库
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. 设置 Node.js 环境
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.1.0
      with:
        node-version: '16'  # 设定 Node.js 的版本（例如 16）
        architecture: 'x64'  # 使用默认的系统架构 (x64)
        check-latest: true   # 确保使用满足版本规格的最新 Node.js

    # 3. 安装依赖 (使用 npm)
    - name: Install dependencies
      run: npm install
      working-directory: ./myproject  # 确保在 ./myproject 目录下执行

    # 4. 构建项目
    - name: Build Vue project
      run: npm run build
      working-directory: ./myproject  # 在 ./myproject 目录下运行构建命令

    # 5. 上传构建产物
    - name: Upload build artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: vue-build-artifact  # 构建产物的名字，随便设置一个好记的名字
        path: myproject/dist  # 构建完成后 Vue.js 项目产物的目录
        if-no-files-found: warn  # 如果找不到文件，输出警告但不失败
        retention-days: 7  # 保留产物的时间为 7 天，最长可以是 90 天
        compression-level: 6  # 压缩级别为 6（适中的压缩效率和速度）
