name: Vue.js CI/CD Workflow

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
  pull_request:
    branches:
      - main  # 当有 Pull Request 到 main 分支时触发

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1. 检出代码库
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. 设置 Node.js 环境
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.1.0
      with:
        node-version: '16'  # 设定 Node.js 的版本
        check-latest: true

    # 3. 验证依赖管理文件是否存在
    - name: Check package.json
      run: test -f package.json && echo "package.json exists" || echo "package.json not found"
      working-directory: ./myproject

    # 4. 安装依赖（添加重试机制，防止网络问题）
    - name: Install dependencies
      run: |
        npm install || npm install
      working-directory: ./myproject

    # 5. 检查安装后的依赖
    - name: Verify dependencies
      run: npm list
      working-directory: ./myproject

    # 6. 构建项目（添加日志和构建失败处理）
    - name: Build Vue project
      run: |
        echo "Starting build process"
        npm run build || { echo "Build failed"; exit 1; }
      working-directory: ./myproject

    # 7. 检查构建产物是否存在
    - name: Verify build output
      run: test -d ./myproject/dist && echo "Build output exists" || { echo "Build output not found"; exit 1; }

    # 8. 上传构建产物
    - name: Upload build artifact
      uses: actions/upload-artifact@v4.4.3
      with:
        name: vue-build-artifact
        path: myproject/dist
        if-no-files-found: warn
        retention-days: 7
